
-- ------------------------------------------------------------------           
-- Class Name    : CRPEJob
-- File Name     : c:\home\classes\crystal\src\clik\CRPEJob.4gl
-- Project       : Crystal Report Writer C++ Classes for Informix-NewEra
-- Author        : Jack Suto
-- Creation Date : 01/29/96
-- Generated by  : CLIK Builder - Version 2.00.WC1
-- ------------------------------------------------------------------           
-- Comments     
--
--
-- ------------------------------------------------------------------           
-- History
--
-- June 96      KHC             Updated all structure types to have structsize initialized
-- ------------------------------------------------------------------           

-- ------------------------------------------------------------------           
-- INCLUDE Definitions
-- ------------------------------------------------------------------           
INCLUDE "CRPEJob.4gh"

BEGIN_C
#if !defined (WIN32)
	#include <print.h>
#endif
#include "..\incl\crpe.h"
END_C

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::CRPEJob
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::CRPEJob(jobHandle SMALLINT)

	LET m_jobHandle = jobHandle

END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::!destroy
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::!destroy()
LET m_jobHandle = 0

END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::Start
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::StartJob()
RETURNING BOOLEAN
VARIABLE returnCode BOOLEAN

	BEGIN_C
	  returncode = PEStartPrintJob( self->m_jobhandle, TRUE );
	END_C

RETURN returnCode
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::Close
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::Close()
RETURNING  VOID

	-- No DELETE in NewEra, need to rely on Garbage Collection!

RETURN
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::Cancel
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::Cancel()
RETURNING  VOID

BEGIN_C PECancelPrintJob(self->m_jobhandle); END_C

RETURN
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::ShowNextPage
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::ShowNextPage()
RETURNING BOOLEAN
VARIABLE returnCode BOOLEAN

BEGIN_C
   returncode = PEShowNextPage(self->m_jobhandle);
END_C

RETURN returnCode
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::ShowFirstPage
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::ShowFirstPage()
RETURNING BOOLEAN

VARIABLE returnCode BOOLEAN

BEGIN_C
   returncode = PEShowFirstPage(self->m_jobhandle);
END_C

RETURN returnCode
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::ShowPreviousPage
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::ShowPreviousPage()
RETURNING BOOLEAN

VARIABLE returnCode BOOLEAN

BEGIN_C
   returncode = PEShowNextPage(self->m_jobhandle);
END_C

RETURN returnCode
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::ShowLastPage
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::ShowLastPage()
RETURNING BOOLEAN

VARIABLE returnCode BOOLEAN

BEGIN_C
   returncode = PEShowLastPage(self->m_jobhandle);
END_C

RETURN returnCode
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::ShowPrintControls
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::ShowPrintControls(showControls BOOLEAN)
RETURNING BOOLEAN

VARIABLE returnCode BOOLEAN

BEGIN_C
   returncode = PEShowPrintControls(self->m_jobhandle, showcontrols);
END_C

RETURN returnCode
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::ZoomPreviewWindow
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::ZoomPreviewWindow(level SMALLINT)
RETURNING BOOLEAN

VARIABLE returnCode BOOLEAN

BEGIN_C
   returncode = PEZoomPreviewWindow(self->m_jobhandle, level);
END_C

RETURN returnCode
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::NextWindowMagnification
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::NextWindowMagnification()
RETURNING BOOLEAN

VARIABLE returnCode BOOLEAN

BEGIN_C
   returncode = PENextPrintWindowMagnification(self->m_jobhandle);
END_C

RETURN returnCode
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::PrintWindow
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::PrintWindow()
RETURNING BOOLEAN

VARIABLE returnCode BOOLEAN

BEGIN_C
   returncode = PEPrintWindow(self->m_jobhandle,TRUE);
END_C

RETURN returnCode
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::ExportPrintWindow
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::ExportPrintWindow(toMail BOOLEAN)
RETURNING BOOLEAN

VARIABLE returnCode BOOLEAN

BEGIN_C
   returncode = PEExportPrintWindow(self->m_jobhandle, tomail, TRUE);
END_C

RETURN returnCode
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::CloseWindow
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::CloseWindow()
RETURNING  VOID

BEGIN_C
   PECloseWindow(self->m_jobhandle);
END_C

RETURN
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::TestNthTableConnectivity
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::TestNthTableConnectivity(tableN SMALLINT)
RETURNING BOOLEAN

VARIABLE returnCode BOOLEAN

BEGIN_C
   returncode = PETestNthTableConnectivity(self->m_jobhandle, tablen);
END_C

RETURN returnCode
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::GetNFormulas
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::GetNFormulas()
RETURNING SMALLINT

VARIABLE returnCode SMALLINT

BEGIN_C
   returncode = PEGetNFormulas(self->m_jobhandle);
END_C

RETURN returnCode
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::GetNthFormula
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::GetNthFormula(formulaN SMALLINT)
RETURNING BOOLEAN, ixString, ixString

VARIABLE returnCode BOOLEAN,
	 formulaName  ixString,
	 formulaText  ixString,
		 ptr1, ptr2       CHAR(1024)

BEGIN_C
 HANDLE nameHandle;
 short nameLength;
 HANDLE textHandle;
 short textLength;

 returncode = PEGetNthFormula(self->m_jobhandle, formulan,
		&nameHandle, &nameLength, &textHandle, &textLength );

 PEGetHandleString( nameHandle, ptr1, nameLength ); 
 PEGetHandleString( textHandle, ptr2, textLength ); 

END_C

	LET formulaName = new ixString( ptr1 clipped )
	LET formulaText = new ixString( ptr2 clipped )

RETURN returnCode, formulaName, formulaText
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::GetFormula
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::GetFormula(formulaName CHAR(*))
RETURNING BOOLEAN, ixString

VARIABLE returnCode BOOLEAN,
	 formulaText  ixString,
		 ptr1     CHAR(1024)

BEGIN_C
 HANDLE textHandle;
 short textLength;

 returncode = PEGetFormula(self->m_jobhandle, formulaname,
		&textHandle, &textLength );

 PEGetHandleString( textHandle, ptr1, textLength ); 

END_C

	LET formulaText = new ixString( ptr1 clipped )

RETURN returnCode, formulaText
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::SetFormula
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::SetFormula(
	   formulaName CHAR(*),
	   formulaText CHAR(*) )
RETURNING BOOLEAN

VARIABLE returnCode BOOLEAN

BEGIN_C
 returncode = PESetFormula(self->m_jobhandle, formulaname, formulatext);
END_C

RETURN returnCode
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::CheckFormula
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::CheckFormula(formulaName CHAR(*))
RETURNING BOOLEAN

VARIABLE returnCode BOOLEAN

BEGIN_C
 returncode = PECheckFormula(self->m_jobhandle, formulaname);
END_C

RETURN returnCode
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::GetSelectionFormula
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::GetSelectionFormula()
RETURNING BOOLEAN, ixString

VARIABLE returnCode BOOLEAN,
	 formulaText  ixString,
		 ptr1     CHAR(1024)

BEGIN_C
 HANDLE textHandle;
 short textLength;

 returncode = PEGetSelectionFormula(self->m_jobhandle, 
		&textHandle, &textLength );

 PEGetHandleString( textHandle, ptr1, textLength ); 

END_C

LET formulaText = new ixString( ptr1 clipped )

RETURN returnCode, formulaText
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::SetSelectionFormula
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::SetSelectionFormula(formulaText CHAR(*))
RETURNING BOOLEAN

VARIABLE returnCode BOOLEAN

BEGIN_C
 returncode =  PESetSelectionFormula(self->m_jobhandle, formulatext);
END_C

RETURN returnCode
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::CheckSelectionFormula
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::CheckSelectionFormula()
RETURNING BOOLEAN

VARIABLE returnCode BOOLEAN

BEGIN_C
 returncode =  PECheckSelectionFormula(self->m_jobhandle);
END_C

RETURN returnCode
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::GetGroupSelectionFormula
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::GetGroupSelectionFormula()
RETURNING BOOLEAN, ixString

VARIABLE returnCode BOOLEAN,
	 formulaText  ixString,
		 ptr1     CHAR(1024)

BEGIN_C
 HANDLE textHandle;
 short textLength;

 returncode = PEGetGroupSelectionFormula(self->m_jobhandle, 
		&textHandle, &textLength );

 PEGetHandleString( textHandle, ptr1, textLength ); 

END_C

	LET formulaText = new ixString( ptr1 clipped )

RETURN returnCode, formulaText
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::SetGroupSelectionFormula
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::SetGroupSelectionFormula(formulaText CHAR(*))
RETURNING BOOLEAN

VARIABLE returnCode BOOLEAN

BEGIN_C
 returncode = PESetGroupSelectionFormula(self->m_jobhandle,formulatext);
END_C

RETURN returnCode
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::CheckGroupSelectionFormula
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::CheckGroupSelectionFormula()
RETURNING BOOLEAN

VARIABLE returnCode BOOLEAN

BEGIN_C
 returncode =  PECheckGroupSelectionFormula(self->m_jobhandle);
END_C

RETURN returnCode
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::GetNGroups
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::GetNGroups()
RETURNING SMALLINT

VARIABLE returnCode SMALLINT

BEGIN_C
 returncode =  PEGetNGroups(self->m_jobhandle);
END_C

RETURN returnCode
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::GetGroupCondition
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::GetGroupCondition(sectionCode  SMALLINT)
RETURNING BOOLEAN, ixString, SMALLINT, SMALLINT

VARIABLE returnCode BOOLEAN,
		 conditionText ixString,
	 condition  SMALLINT,
	 sortDirection  SMALLINT,
		 ptr1     CHAR(1024)

BEGIN_C
 HANDLE textHandle;
 short textLength;


 returncode = PEGetGroupCondition( self->m_jobhandle, sectioncode,
		&textHandle, &textLength, &condition,&sortdirection);
 PEGetHandleString( textHandle, ptr1, textLength ); 

END_C

	LET conditionText = new ixString( ptr1 clipped )

RETURN returnCode, conditionText, condition, sortDirection
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::SetGroupCondition
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::SetGroupCondition(
	   sectionCode SMALLINT,
	   conditionField CHAR(*),
	   condition SMALLINT,
	   sortDirection SMALLINT )
RETURNING BOOLEAN

VARIABLE returnCode BOOLEAN

BEGIN_C
 returncode = PESetGroupCondition(self->m_jobhandle, sectioncode,
		conditionfield,condition,sortdirection);
END_C

RETURN returnCode
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::GetNSortFields
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::GetNSortFields()
RETURNING SMALLINT

VARIABLE returnCode SMALLINT

BEGIN_C
 returncode = PEGetNSortFields(self->m_jobhandle);
END_C

RETURN returnCode
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::GetNthSortField
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::GetNthSortField(sortFieldN SMALLINT)
RETURNING BOOLEAN, ixString, SMALLINT

VARIABLE returnCode BOOLEAN,
	 field  ixString,
	 direction  SMALLINT,
		 ptr1     CHAR(1024)

BEGIN_C
 HANDLE textHandle;
 short textLength;

 returncode = PEGetNthSortField(self->m_jobhandle, sortfieldn,
		&textHandle, &textLength, &direction );

 PEGetHandleString( textHandle, ptr1, textLength ); 

END_C

	LET field = new ixString( ptr1 clipped )


RETURN returnCode, field, direction
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::SetNthSortField
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::SetNthSortField(
	   sortFieldN SMALLINT,
	   field CHAR(*),
	   direction SMALLINT )
RETURNING BOOLEAN

VARIABLE returnCode BOOLEAN

BEGIN_C
 returncode = PESetNthSortField(self->m_jobhandle, sortfieldn,
		field,direction);
END_C

RETURN returnCode
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::DeleteNthSortField
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::DeleteNthSortField(sortFieldN SMALLINT)
RETURNING BOOLEAN

VARIABLE returnCode BOOLEAN

BEGIN_C
 returncode = PEDeleteNthSortField(self->m_jobhandle,sortfieldn);
END_C

RETURN returnCode
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::GetNGroupSortFields
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::GetNGroupSortFields()
RETURNING SMALLINT

VARIABLE returnCode SMALLINT

BEGIN_C
 returncode =  PEGetNGroupSortFields(self->m_jobhandle);
END_C

RETURN returnCode
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::GetNthGroupSortField
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::GetNthGroupSortField(sortFieldN SMALLINT)
RETURNING BOOLEAN, ixString, SMALLINT

VARIABLE returnCode BOOLEAN,
	 field  ixString,
	 direction  SMALLINT,
		 ptr1     CHAR(1024)

BEGIN_C
 HANDLE textHandle;
 short textLength;

 returncode = PEGetNthGroupSortField(self->m_jobhandle, sortfieldn,
		&textHandle, &textLength, &direction );

 PEGetHandleString( textHandle, ptr1, textLength ); 

END_C

	LET field = new ixString( ptr1 clipped )

RETURN returnCode, field, direction
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::SetNthGroupSortField
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::SetNthGroupSortField(
	   sortFieldN SMALLINT,
	   field CHAR(*),
	   direction SMALLINT )
RETURNING BOOLEAN

VARIABLE returnCode BOOLEAN

BEGIN_C
 returncode = PESetNthGroupSortField(self->m_jobhandle, sortfieldn,field,direction);
END_C

RETURN returnCode
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::DeleteNthGroupSortField
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::DeleteNthGroupSortField(sortFieldN SMALLINT)
RETURNING BOOLEAN

VARIABLE returnCode BOOLEAN

BEGIN_C
 returncode = PEDeleteNthGroupSortField(self->m_jobhandle, sortfieldn);
END_C

RETURN returnCode
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::GetNTables
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::GetNTables()
RETURNING SMALLINT

VARIABLE returnCode SMALLINT

BEGIN_C
 returncode = PEGetNTables(self->m_jobhandle);
END_C

RETURN returnCode
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::GetNthTableType
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::GetNthTableType(tableN SMALLINT)
RETURNING BOOLEAN, CRPETableType

VARIABLE returnCode BOOLEAN,
	 tableType  CRPETableType(),
		 c1, c2 CHAR(256),
		 s1 SMALLINT

BEGIN_C
{
struct PETableType t;

 returncode =  PEGetNthTableType(self->m_jobhandle, tablen, &t);
 if ( returncode == TRUE ) {
	strcpy( c1, t.DLLName );
	strcpy( c2, t.DescriptiveName );
	s1 = t.DBType;
 }
}
END_C

	LET tableType.m_dllname = c1 clipped
	LET tableType.m_descriptiveName = c2 clipped
	LET tableType.m_dbType = s1

RETURN returnCode, tableType
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::GetNthTableSessionInfo
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::GetNthTableSessionInfo(tableN SMALLINT)
RETURNING BOOLEAN, CRPESessionInfo

VARIABLE returnCode BOOLEAN,
	 sessionInfo  CRPESessionInfo(),
		 c1, c2 CHAR(128),
		 i1 INTEGER

BEGIN_C
{
struct PESessionInfo s;
s.StructSize = sizeof(struct PESessionInfo);
 returncode = PEGetNthTableSessionInfo(self->m_jobhandle, tablen, &s);
 if ( returncode == TRUE ) {
	lstrcpy( c1, s.UserID );
	lstrcpy( c2, s.Password );
	i1 = s.SessionHandle;
 }

}
END_C

	LET sessionInfo.m_userID = c1
	LET sessionInfo.m_password = c2
	LET sessionInfo.m_sessionHandle = i1

RETURN returnCode, sessionInfo
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::SetNthTableSessionInfo
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::SetNthTableSessionInfo(
	   tableN SMALLINT,
	   sessionInfo  CRPESessionInfo,
	   propagate BOOLEAN )
RETURNING BOOLEAN

VARIABLE returnCode BOOLEAN,
   n1, n2 SMALLINT

LET n1 = length( sessionInfo.m_userID clipped )
LET n2 = length( sessionInfo.m_password clipped )


BEGIN_C
{
struct PESessionInfo s;

 s.StructSize = sizeof(struct PESessionInfo);
 lstrcpyn( s.UserID, sessioninfo->m_userid, n1+1 );
 lstrcpyn( s.Password, sessioninfo->m_password, n2+1 );
 s.SessionHandle = sessioninfo->m_sessionhandle;
  
 returncode = PESetNthTableSessionInfo(self->m_jobhandle, tablen,&s, propagate);
}
END_C

RETURN returnCode
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::GetNthTableLocation
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::GetNthTableLocation(tableN SMALLINT)
RETURNING BOOLEAN, CRPETableLocation

VARIABLE returnCode BOOLEAN,
		 ptr CHAR(256),
	 tableLocation  CRPETableLocation()

BEGIN_C
struct PETableLocation l;
 
 l.StructSize = sizeof(struct PETableLocation);
 returncode = PEGetNthTableLocation(self->m_jobhandle, tablen, &l);
 if ( returncode == TRUE ) 
     lstrcpy(ptr,l.Location);

END_C

	LET tableLocation.m_location = ptr

RETURN returnCode, tableLocation
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::SetNthTableLocation
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::SetNthTableLocation(
	   tableN SMALLINT,
	   tableLocation  CRPETableLocation )
RETURNING BOOLEAN

VARIABLE returnCode BOOLEAN,
	n1 SMALLINT

LET n1 = length( tableLocation.m_location clipped )


BEGIN_C
{
 struct PETableLocation l;
 l.StructSize = sizeof(struct PETableLocation);
 lstrcpyn( l.Location, tablelocation->m_location, n1+1 );
 returncode = PESetNthTableLocation(self->m_jobhandle,tablen,&l);
}
END_C

RETURN returnCode
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::GetNthTableLogonInfo
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::GetNthTableLogonInfo(tableN SMALLINT)
RETURNING BOOLEAN, CRPELogonInfo

VARIABLE returnCode BOOLEAN,
	 logonInfo  CRPELogonInfo(),
		 c1, c2, c3, c4 CHAR(128)

BEGIN_C
{
struct PELogOnInfo l;

 l.StructSize = sizeof(struct PELogOnInfo);
 returncode = PEGetNthTableLogOnInfo(self->m_jobhandle, tablen, &l);
 if ( returncode == TRUE ) {
	lstrcpy( c1, l.ServerName );
	lstrcpy( c2, l.DatabaseName );
	lstrcpy( c3, l.UserID );
	lstrcpy( c4, l.Password );
 }

}
END_C

	LET logonInfo.m_serverName = c1
	LET logonInfo.m_databaseName = c2
	LET logonInfo.m_userID = c3
	LET logonInfo.m_password = c4

RETURN returnCode, logonInfo
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::SetNthTableLogonInfo
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::SetNthTableLogonInfo(
	   tableN SMALLINT,
	   logonInfo  CRPELogonInfo,
	   propagate BOOLEAN )
RETURNING BOOLEAN

VARIABLE returnCode BOOLEAN,
	n1, n2, n3, n4 SMALLINT

LET n1 = length( logonInfo.m_serverName clipped )
LET n2 = length( logonInfo.m_databaseName clipped )
LET n3 = length( logonInfo.m_userID clipped )
LET n4 = length( logonInfo.m_password clipped )


BEGIN_C
{
struct PELogOnInfo l;

 l.StructSize = sizeof(struct PELogOnInfo);
 lstrcpyn( l.ServerName, logoninfo->m_servername, n1+1 );
 lstrcpyn( l.DatabaseName, logoninfo->m_databasename, n2+1 );
 lstrcpyn( l.UserID, logoninfo->m_userid, n3+1 );
 lstrcpyn( l.Password, logoninfo->m_password, n4+1 );

 returncode = PESetNthTableLogOnInfo(self->m_jobhandle, tablen, &l, propagate);
}
END_C

RETURN returnCode
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::GetSQLQuery
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::GetSQLQuery()
RETURNING BOOLEAN, ixString

VARIABLE returnCode BOOLEAN,
	 query  ixString,
		 ptr1     CHAR(1024)

BEGIN_C
 HANDLE textHandle;
 short textLength;

 returncode = PEGetSQLQuery(self->m_jobhandle,
		&textHandle, &textLength );

 PEGetHandleString( textHandle, ptr1, textLength ); 

END_C

	LET query = new ixString( ptr1 clipped )


RETURN returnCode, query
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::SetSQLQuery
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::SetSQLQuery(query CHAR(*))
RETURNING BOOLEAN

VARIABLE returnCode BOOLEAN

BEGIN_C
 returncode = PESetSQLQuery(self->m_jobhandle,query);
END_C

RETURN returnCode
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::GetNParams
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::GetNParams()
RETURNING SMALLINT

VARIABLE returnCode SMALLINT

BEGIN_C
 returncode = PEGetNParams(self->m_jobhandle);
END_C

RETURN returnCode
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::GetNthParam
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::GetNthParam(paramN SMALLINT)
RETURNING BOOLEAN, ixString

VARIABLE returnCode BOOLEAN,
	 paramValue  ixString,
		 ptr1     CHAR(1024)

BEGIN_C
 HANDLE textHandle;
 short textLength;

 returncode = PEGetNthParam(self->m_jobhandle, paramn,
		&textHandle, &textLength );

 PEGetHandleString( textHandle, ptr1, textLength ); 

END_C

	LET paramValue = new ixString( ptr1 clipped )


RETURN returnCode, paramValue
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::SetNthParam
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::SetNthParam(
	   paramN SMALLINT,
	   paramValue CHAR(*) )
RETURNING BOOLEAN

VARIABLE returnCode BOOLEAN

BEGIN_C
 returncode = PESetNthParam(self->m_jobhandle, paramn,paramvalue);
END_C

RETURN returnCode
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::GetNDetailCopies
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::GetNDetailCopies()
RETURNING BOOLEAN, SMALLINT

VARIABLE returnCode BOOLEAN,
	 nCopies  SMALLINT

BEGIN_C
 returncode = PEGetNDetailCopies(self->m_jobhandle, &ncopies);
END_C

RETURN returnCode, nCopies
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::SetNDetailCopies
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::SetNDetailCopies(nCopies SMALLINT)
RETURNING BOOLEAN

VARIABLE returnCode BOOLEAN

BEGIN_C
 returncode = PESetNDetailCopies(self->m_jobhandle, ncopies);
END_C

RETURN returnCode
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::GetMinimumSectionHeight
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::GetMinimumSectionHeight(sectionCode SMALLINT)
RETURNING BOOLEAN, SMALLINT

VARIABLE returnCode BOOLEAN,
	 height  SMALLINT

BEGIN_C
 returncode = PEGetMinimumSectionHeight(self->m_jobhandle, sectioncode,&height);
END_C

RETURN returnCode, height
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::SetMinimumSectionHeight
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::SetMinimumSectionHeight(
	   sectionCode SMALLINT,
	   height SMALLINT )
RETURNING BOOLEAN

VARIABLE returnCode BOOLEAN

BEGIN_C
 returncode = PESetMinimumSectionHeight(self->m_jobhandle, sectioncode,height);
END_C

RETURN returnCode
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::GetNLinesInSection
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::GetNLinesInSection(sectionCode SMALLINT)
RETURNING SMALLINT

VARIABLE returnCode SMALLINT

BEGIN_C
 returncode = PEGetNLinesInSection(self->m_jobhandle, sectioncode);
END_C

RETURN returnCode
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::GetLineHeight
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::GetLineHeight(
	   sectionCode SMALLINT,
	   lineN SMALLINT )
RETURNING BOOLEAN, SMALLINT, SMALLINT

VARIABLE returnCode BOOLEAN,
	 height  SMALLINT,
	 ascent  SMALLINT

BEGIN_C
 returncode = PEGetLineHeight(self->m_jobhandle, sectioncode,linen,&height,&ascent);
END_C

RETURN returnCode, height, ascent
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::SetLineHeight
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::SetLineHeight(
	   sectionCode SMALLINT,
	   lineN SMALLINT,
	   height SMALLINT,
	   ascent SMALLINT )
RETURNING BOOLEAN

VARIABLE returnCode BOOLEAN

BEGIN_C
 returncode = PESetLineHeight(self->m_jobhandle, sectioncode,
			linen,height,ascent);
END_C

RETURN returnCode
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::SetFont
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::SetFont(
	   sectionCode SMALLINT,
	   scopeCode SMALLINT,
	   faceName CHAR(*),
	   fontFamily SMALLINT,
	   fontPitch SMALLINT,
	   charSet SMALLINT,
	   pointSize SMALLINT,
	   isItalic SMALLINT,
	   isUnderlined SMALLINT,
	   isStruckOut SMALLINT,
	   weight SMALLINT )
RETURNING BOOLEAN

VARIABLE returnCode BOOLEAN

BEGIN_C
 returncode = PESetFont(self->m_jobhandle, sectioncode,scopecode,facename,fontfamily,
fontpitch,charset,pointsize,isitalic,isunderlined, isstruckout,weight);
END_C

RETURN returnCode
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::GetSectionFormat
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::GetSectionFormat(sectionCode SMALLINT)
RETURNING BOOLEAN, CRPESectionOptions

VARIABLE returnCode BOOLEAN,
	 options  CRPESectionOptions(),
		 b1, b2, b3, b4, b5, b6,b7 BOOLEAN

BEGIN_C
{
struct PESectionOptions s;
 returncode = PEGetSectionFormat(self->m_jobhandle, sectioncode, &s);
  if ( returncode == TRUE ) {
		b1 = s.visible;
		b2 = s.newPageBefore;
		b3 = s.newPageAfter;
		b4 = s.keepTogether;
		b5 = s.suppressBlankLines;
		b6 = s.resetPageNAfter;
		b7 = s.printAtBottomOfPage;
  }
}
END_C

	LET options.m_visible  = b1
	LET options.m_newPageBefore  = b2
	LET options.m_newPageAfter  = b3
	LET options.m_keepTogether  = b4
	LET options.m_suppressBlankLines  = b5
	LET options.m_resetPageNAfter  = b6
	LET options.m_printAtBottomOfPage  = b7


RETURN returnCode, options
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::SetSectionFormat
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::SetSectionFormat(
	   sectionCode SMALLINT,
	   options  CRPESectionOptions )
RETURNING BOOLEAN

VARIABLE returnCode BOOLEAN

BEGIN_C
{
struct PESectionOptions s;
	s.visible = options->m_visible;
	s.newPageBefore = options->m_newpagebefore;
	s.newPageAfter = options->m_newpageafter;
	s.keepTogether = options->m_keeptogether;
	s.suppressBlankLines = options->m_suppressblanklines;
	s.resetPageNAfter = options->m_resetpagenafter;
	s.printAtBottomOfPage = options->m_printatbottomofpage;

    returncode = PESetSectionFormat(self->m_jobhandle, sectioncode, &s);
}
END_C

RETURN returnCode
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::GetGraphType
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::GetGraphType(
	   sectionCode SMALLINT,
	   graphN SMALLINT )
RETURNING BOOLEAN, SMALLINT

VARIABLE returnCode BOOLEAN,
	 graphType  SMALLINT

BEGIN_C
 returncode = PEGetGraphType(self->m_jobhandle, sectioncode,graphn,&graphtype);
END_C

RETURN returnCode, graphType
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::SetGraphType
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::SetGraphType(
	   sectionCode SMALLINT,
	   graphN SMALLINT,
	   graphType SMALLINT )
RETURNING BOOLEAN

VARIABLE returnCode BOOLEAN

BEGIN_C
 returncode = PESetGraphType(self->m_jobhandle, sectioncode,graphn,&graphtype);
END_C

RETURN returnCode
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::GetGraphData
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::GetGraphData(
	   sectionCode SMALLINT,
	   graphN SMALLINT )
RETURNING BOOLEAN, CRPEGraphDataInfo

VARIABLE returnCode BOOLEAN,
	 graphDataInfo  CRPEGraphDataInfo,
		 b1, b2, b3, b4 SMALLINT

BEGIN_C
{
 struct PEGraphDataInfo g;

 g.StructSize = sizeof(struct PEGraphDataInfo);
 returncode = PEGetGraphData(self->m_jobhandle, sectioncode,graphn,&g);
 if ( returncode == TRUE ) {
     b1 = g.rowGroupN;
	 b2 = g.colGroupN;
	 b3 = g.summarizedFieldN;
	 b4 = g.graphDirection;
 }

}
END_C

	LET graphDataInfo = new CRPEGraphDataInfo( b1, b2, b3, b4 )

RETURN returnCode, graphDataInfo
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::SetGraphData
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::SetGraphData(
	   sectionCode SMALLINT,
	   graphN SMALLINT,
	   graphDataInfo  CRPEGraphDataInfo )
RETURNING BOOLEAN

VARIABLE returnCode BOOLEAN

BEGIN_C
 struct PEGraphDataInfo g;
 g.StructSize = sizeof(struct PEGraphDataInfo);
 g.rowGroupN = graphdatainfo->m_rowgroupn;
 g.colGroupN = graphdatainfo->m_colgroupn;
 g.summarizedFieldN = graphdatainfo->m_summarizedfieldn;
 g.graphDirection = graphdatainfo->m_graphdirection;

 returncode = PESetGraphData(self->m_jobhandle, sectioncode,graphn, &g);
END_C

RETURN returnCode
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::GetGraphText
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::GetGraphText(
	   sectionCode SMALLINT,
	   graphN SMALLINT )
RETURNING BOOLEAN, CRPEGraphTextInfo

VARIABLE returnCode BOOLEAN,
	 graphTextInfo  CRPEGraphTextInfo,
		 c1, c2, c3, c4, c5, c6, c7, c8 CHAR(128)

BEGIN_C
{
 struct PEGraphTextInfo g;
 g.StructSize = sizeof(struct PEGraphTextInfo);
 returncode = PEGetGraphText(self->m_jobhandle, sectioncode,graphn,&g);
 if ( returncode == TRUE ) {
	strcpy( c1, g.graphTitle );
	strcpy( c2, g.graphSubTitle );
	strcpy( c3, g.graphFootNote );
	strcpy( c4, g.graphGroupsTitle );
	strcpy( c5, g.graphSeriesTitle );
	strcpy( c6, g.graphXAxisTitle );
	strcpy( c7, g.graphYAxisTitle );
	strcpy( c8, g.graphZAxisTitle );
 }
}
END_C

	LET graphTextInfo = new CRPEGraphTextInfo( c1, c2, c3, c4, c5, c6, c7, c8 )

RETURN returnCode, graphTextInfo
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::SetGraphText
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::SetGraphText(
	   sectionCode SMALLINT,
	   graphN SMALLINT,
	   graphTextInfo  CRPEGraphTextInfo )
RETURNING BOOLEAN

VARIABLE returnCode BOOLEAN

BEGIN_C
{
 struct PEGraphTextInfo g;
 g.StructSize = sizeof(struct PEGraphTextInfo);
 lstrcpy( g.graphTitle, graphtextinfo->m_graphtitle );
 lstrcpy( g.graphSubTitle, graphtextinfo->m_graphsubtitle );
 lstrcpy( g.graphFootNote, graphtextinfo->m_graphfootnote );
 lstrcpy( g.graphGroupsTitle, graphtextinfo->m_graphgroupstitle );
 lstrcpy( g.graphSeriesTitle, graphtextinfo->m_graphseriestitle );
 lstrcpy( g.graphXAxisTitle, graphtextinfo->m_graphxaxistitle );
 lstrcpy( g.graphYAxisTitle, graphtextinfo->m_graphyaxistitle );
 lstrcpy( g.graphZAxisTitle, graphtextinfo->m_graphzaxistitle );

 returncode = PESetGraphText(self->m_jobhandle, sectioncode,graphn, &g);

}
END_C

RETURN returnCode
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::GetGraphOptions
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::GetGraphOptions(
	   sectionCode SMALLINT,
	   graphN SMALLINT )
RETURNING BOOLEAN, CRPEGraphOptions

VARIABLE returnCode BOOLEAN,
	 graphOptions  CRPEGraphOptions,
		 f1, f2 FLOAT,
		 b1, b2, b3, b4 BOOLEAN,
		 c1 CHAR(128)

BEGIN_C
{
 struct PEGraphOptions g;
 g.StructSize = sizeof(struct PEGraphOptions);
 returncode = PEGetGraphOptions( self->m_jobhandle, sectioncode,graphn, &g);
 if ( returncode == TRUE ) {
     f1 = g.graphMaxValue;
	 f2 = g.graphMinValue;
	 b1 = g.showDataValue;
	 b2 = g.showGridLine;
	 b3 = g.verticalBars;
	 b4 = g.showLegend;
	 strcpy( c1, g.fontFaceName);
 }

}
END_C

	LET graphOptions = new CRPEGraphOptions ( f1, f2, b1, b2, b3, b4, c1 )

RETURN returnCode, graphOptions
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::SetGraphOptions
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::SetGraphOptions(
	   sectionCode SMALLINT,
	   graphN SMALLINT,
	   graphOptions  CRPEGraphOptions )
RETURNING BOOLEAN

VARIABLE returnCode BOOLEAN
BEGIN_C
{
 struct PEGraphOptions g;
 g.graphMaxValue = graphoptions->m_graphmaxvalue;
 g.graphMinValue = graphoptions->m_graphminvalue;
 g.showDataValue = graphoptions->m_showdatavalue;
 g.showGridLine = graphoptions->m_showgridline;
 g.verticalBars = graphoptions->m_verticalbars;
 g.showLegend = graphoptions->m_showlegend;
 lstrcpy( g.fontFaceName, graphoptions->m_fontfacename );

 returncode = PESetGraphOptions( self->m_jobhandle, sectioncode,graphn, &g);
}
END_C

RETURN returnCode
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::GetReportTitle
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::GetReportTitle()
RETURNING BOOLEAN, ixString

VARIABLE returnCode BOOLEAN,
	 title  ixString,
		 ptr1     CHAR(1024)

BEGIN_C
 HANDLE textHandle;
 short textLength;

 returncode = PEGetReportTitle(self->m_jobhandle,
		&textHandle, &textLength );

 PEGetHandleString( textHandle, ptr1, textLength ); 

END_C

	LET title = new ixString( ptr1 clipped )


RETURN returnCode, title
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::SetReportTitle
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::SetReportTitle(title CHAR(*))
RETURNING BOOLEAN

VARIABLE returnCode BOOLEAN

BEGIN_C
 returncode = PESetReportTitle(self->m_jobhandle, title);
END_C

RETURN returnCode
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::GetPrintDate
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::GetPrintDate()
RETURNING BOOLEAN, SMALLINT, SMALLINT,
 SMALLINT

VARIABLE returnCode BOOLEAN,
	 v_year  SMALLINT,
	 v_month  SMALLINT,
	 v_day  SMALLINT

BEGIN_C
 returncode = PEGetPrintDate(self->m_jobhandle, &v_year,&v_month,&v_day);
END_C

RETURN returnCode, v_year, v_month, v_day
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::SetPrintDate
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::SetPrintDate(
	   v_year SMALLINT,
	   v_month SMALLINT,
	   v_day SMALLINT )
RETURNING BOOLEAN

VARIABLE returnCode BOOLEAN

BEGIN_C
 returncode = PESetPrintDate(self->m_jobhandle, v_year,v_month,v_day);
END_C

RETURN returnCode
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::GetSelectedPrinter
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::GetSelectedPrinter()
RETURNING BOOLEAN, ixString, ixString, ixString, FOREIGN

VARIABLE returnCode BOOLEAN,
	 driverName  ixString,
	 printerName  ixString,
	 portName  ixString,
	 mode  FOREIGN,
		 ptr1, ptr2, ptr3         CHAR(1024)

BEGIN_C
 HANDLE drvHandle;
 short drvLength;
 HANDLE ptrHandle;
 short ptrLength;
 HANDLE portHandle;
 short portLength;
 DEVMODE *m;

 returncode = PEGetSelectedPrinter(self->m_jobhandle,  &drvHandle, &drvLength,
		&ptrHandle, &ptrLength, &portHandle, &portLength, (DEVMODE **)&m );

 PEGetHandleString( drvHandle,  ptr1, drvLength ); 
 PEGetHandleString( ptrHandle,  ptr2, ptrLength ); 
 PEGetHandleString( portHandle, ptr3, portLength ); 

	mode = (char *) m;
END_C
	LET driverName = new ixString( ptr1 clipped )
	LET printerName = new ixString( ptr2 clipped )
	LET portName = new ixString( ptr3 clipped )


RETURN returnCode, driverName, printerName, portName, mode
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::SelectPrinter
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::SelectPrinter(
	   driverName CHAR(*),
	   printerName CHAR(*),
	   portName CHAR(*),
	   mode  FOREIGN )
RETURNING BOOLEAN

VARIABLE returnCode BOOLEAN

BEGIN_C
 returncode = PESelectPrinter(self->m_jobhandle,drivername,
		printername,portname,(DEVMODE *)mode);
END_C

RETURN returnCode
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::GetPrintOptions
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::GetPrintOptions()
RETURNING BOOLEAN, CRPEPrintOptions

VARIABLE returnCode BOOLEAN,
	 options  CRPEPrintOptions(),
		 s1, s2, s3, s4 SMALLINT

BEGIN_C
{
struct PEPrintOptions p;
 p.StructSize = sizeof(struct PEPrintOptions);
 returncode = PEGetPrintOptions(self->m_jobhandle, &p);
 if (returncode == TRUE ) {
    s1 = p.startPageN;
	s2 = p.stopPageN;
	s3 = p.nReportCopies;
	s4 = p.collation;
 }

}
END_C

	LET options.m_startPageN  = s1
	LET options.m_stopPageN  = s2
	LET options.m_nReportCopies  = s3
	LET options.m_collation  = s4

RETURN returnCode, options
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::SetPrintOptions
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::SetPrintOptions(options  CRPEPrintOptions)
RETURNING BOOLEAN

VARIABLE returnCode BOOLEAN

BEGIN_C
{
struct PEPrintOptions p;

	p.StructSize = sizeof(struct PEPrintOptions);
    p.startPageN = options->m_startpagen;
	p.stopPageN = options->m_stoppagen;
	p.nReportCopies = options->m_nreportcopies;
	p.collation = options->m_collation;
 
    returncode = PESetPrintOptions(self->m_jobhandle, &p);
}
END_C

RETURN returnCode
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::OutputToPrinter
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::OutputToPrinter(nCopies  SMALLINT)
RETURNING BOOLEAN

VARIABLE returnCode BOOLEAN

BEGIN_C
 returncode = PEOutputToPrinter(self->m_jobhandle, ncopies);
END_C

RETURN returnCode
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::OutputToWindow
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::OutputToWindow(
	   title CHAR(*),
	   left SMALLINT,
	   top SMALLINT,
	   width SMALLINT,
	   height SMALLINT,
	   style INTEGER,
	   parentWindow  ixWindow )
RETURNING BOOLEAN

VARIABLE returnCode BOOLEAN

		BEGIN_C 
		{
#if !defined (WIN32)
		       HWND hWnd; 
		       extern  HWND __getHWndFromixWindow( struct ixwindow *); 
		       hWnd = __getHWndFromixWindow( parentwindow ); 
		       hWnd = GetWindow(hWnd, GW_CHILD); 
#endif

			returncode = PEOutputToWindow( self->m_jobhandle, 
				title, left, top, width, height, style, 
#if defined (WIN32)
				0); 
#else        
				hWnd); 
#endif
	}
		END_C

RETURN returnCode
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::PrintControlsShowing
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::PrintControlsShowing()
RETURNING BOOLEAN, SMALLINT

VARIABLE returnCode BOOLEAN,
	 controlsShowing  SMALLINT

BEGIN_C
 returncode = PEPrintControlsShowing(self->m_jobhandle,(int *)&controlsshowing);
END_C

RETURN returnCode, controlsShowing
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::GetExportOptions
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::GetExportOptions()
RETURNING BOOLEAN, CRPEExportOptions

VARIABLE returnCode BOOLEAN,
	 options  CRPEExportOptions(),
		 i1, i2 INTEGER,
		 c1, c2 CHAR(*),
		 f1, f2 FOREIGN,
		 s1, s2 SMALLINT

BEGIN_C
{
struct PEExportOptions o;
 returncode = PEGetExportOptions(self->m_jobhandle, &o);
 if ( returncode == TRUE ) {
    i1 = o.formatType;
    c1 = o.formatDLLName;
    f1 = (char *) o.formatOptions;
    s1 = o.nFormatOptionsBytes;
    
    i2 = o.destinationType;
    c2 = o.destinationDLLName;
    f2 = (char *) o.destinationOptions;
    s2 = o.nDestinationOptionsBytes; 
 }
}
END_C

    LET options.m_formatType = i1 
    LET options.m_formatDLLName = c1
    LET options.m_formatOptions = f1 
    LET options.m_nFormatOptionsBytes = s1
    
    LET options.m_destinationType = i2 
    LET options.m_destinationDLLName = c2
    LET options.m_destinationOptions = f2
    LET options.m_nDestinationOptionsBytes  = s2

RETURN returnCode, options
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::ExportTo
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::ExportTo(options  CRPEExportOptions)
RETURNING BOOLEAN

VARIABLE returnCode BOOLEAN

BEGIN_C
{
struct PEExportOptions o;
	o.StructSize = sizeof(struct PEExportOptions);
    o.formatType = options->m_formattype;
    lstrcpy( o.formatDLLName, options->m_formatdllname);
    o.formatOptions = options->m_formatoptions;
    o.nFormatOptionsBytes = options->m_nformatoptionsbytes;
    
    o.destinationType = options->m_destinationtype;
    lstrcpy( o.destinationDLLName, options->m_destinationdllname );
    o.destinationOptions = options->m_destinationoptions;
    o.nDestinationOptionsBytes = options->m_ndestinationoptionsbytes; 

 returncode =PEExportTo(self->m_jobhandle, &o);
}
END_C

RETURN returnCode
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::GetMargins
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::GetMargins()
RETURNING BOOLEAN, SMALLINT, SMALLINT,
 SMALLINT, SMALLINT

VARIABLE returnCode BOOLEAN,
	 left  SMALLINT,
	 right  SMALLINT,
	 top  SMALLINT,
	 bottom  SMALLINT

BEGIN_C
 returncode = PEGetMargins(self->m_jobhandle, &left,&right,&top,&bottom);
END_C

RETURN returnCode, left, right, top, bottom
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::SetMargins
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::SetMargins(
	   left SMALLINT,
	   right SMALLINT,
	   top SMALLINT,
	   bottom SMALLINT )
RETURNING BOOLEAN

VARIABLE returnCode BOOLEAN

BEGIN_C
 returncode = PESetMargins(self->m_jobhandle, left,right,top,bottom);
END_C

RETURN returnCode
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::GetJobStatus
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::GetJobStatus()
RETURNING SMALLINT, CRPEJobInfo

VARIABLE returnCode SMALLINT,
	 jobStatus  CRPEJobInfo(),
		 i1, i2, i3 INTEGER,
		 s1, s2, s3 SMALLINT,
		 b1 BOOLEAN

BEGIN_C
 struct PEJobInfo j;
 j.StructSize = sizeof(struct PEJobInfo);
 returncode = PEGetJobStatus(self->m_jobhandle, &j);
 if ( returncode == TRUE ) {
	i1 = j.NumRecordsRead;
	i2 = j.NumRecordsSelected;
	i3 = j.NumRecordsPrinted;
	s1 = j.DisplayPageN;
	s2 = j.LatestPageN;
	s3 = j.StartPageN;
	b1 = j.printEnded;
 }

END_C

	LET jobStatus.m_numRecordsRead = i1
	LET jobStatus.m_numRecordsSelected = i2
	LET jobStatus.m_numRecordsPrinted = i3
	LET jobStatus.m_displayPageN = s1
	LET jobStatus.m_latestPageN = s2
	LET jobStatus.m_startPageN = s3
	LET jobStatus.m_printEnded = b1

RETURN returnCode, jobStatus
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::IsJobFinished
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::IsJobFinished()
RETURNING BOOLEAN

VARIABLE returnCode BOOLEAN

BEGIN_C
 returncode = PEIsPrintJobFinished(self->m_jobhandle);
END_C

RETURN returnCode
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::GetErrorCode
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::GetErrorCode()
RETURNING SMALLINT

VARIABLE returnCode SMALLINT

BEGIN_C
 returncode = PEGetErrorCode(self->m_jobhandle);
END_C

RETURN returnCode
END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::GetErrorText
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::GetErrorText()
RETURNING ixString

VARIABLE returnCode  ixString,
		 ptr1     CHAR(1024)

BEGIN_C
  HANDLE textHandle;
  short textLength;

	if(PEGetErrorText(self->m_jobhandle,&textHandle, &textLength ))
	{
		PEGetHandleString( textHandle, ptr1, textLength ); 
	}


END_C

	LET returnCode = new ixString( ptr1 clipped )

RETURN returnCode

END FUNCTION

-- ------------------------------------------------------------------           
-- FUNCTION CRPEJob::GetJobHandle
-- ------------------------------------------------------------------           
FUNCTION CRPEJob::GetJobHandle()
RETURNING SMALLINT

VARIABLE returnCode SMALLINT

LET returnCode = m_jobHandle
RETURN returnCode
END FUNCTION

-- ------------------------------------------------------------------           
-- End of file : CRPEJob.4gl
-- ------------------------------------------------------------------           
